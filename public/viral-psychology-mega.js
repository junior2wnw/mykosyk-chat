/**
 * üî•üî•üî• –ú–ï–ì–ê-–°–ò–°–¢–ï–ú–ê –ü–°–ò–•–û–õ–û–ì–ò–ß–ï–°–ö–ò–• –¢–†–ò–ì–ì–ï–†–û–í - –ú–ò–ö–û–°–ò–ö üî•üî•üî•
 * –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤–∏—Ä—É—Å–Ω–æ—Å—Ç—å –¥–ª—è –í–°–ï–• –≤–æ–∑—Ä–∞—Å—Ç–æ–≤
 */

class MegaViralPsychology {
    constructor() {
        this.userProfile = this.buildUserProfile();
        this.emotionalState = this.detectEmotionalState();
        this.perfectMoment = this.findPerfectMoment();
        this.init();
    }
    
    // –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    buildUserProfile() {
        const hour = new Date().getHours();
        const day = new Date().getDay();
        const referrer = document.referrer.toLowerCase();
        
        return {
            likelyAge: this.guessAge(hour, day, referrer),
            emotionalVulnerability: this.calculateVulnerability(hour, day),
            sharingReadiness: this.assessSharingReadiness(),
            platform: this.detectSourcePlatform(referrer),
            timeOnSite: 0,
            engaged: false
        };
    }
    
    // –£–≥–∞–¥—ã–≤–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç –ø–æ –ø–æ–≤–µ–¥–µ–Ω–∏—é
    guessAge(hour, day) {
        // –ü–æ–¥—Ä–æ—Å—Ç–∫–∏: –ø–æ–∑–¥–Ω–æ –Ω–æ—á—å—é, –≤—ã—Ö–æ–¥–Ω—ã–µ
        if ((hour >= 22 || hour <= 3) || [0, 6].includes(day)) {
            return 'teen';
        }
        // –í–∑—Ä–æ—Å–ª—ã–µ: —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –≤ –±—É–¥–Ω–∏
        if (hour >= 9 && hour <= 18 && ![0, 6].includes(day)) {
            return 'adult';
        }
        // –ü–æ–∂–∏–ª—ã–µ: —Ä–∞–Ω–Ω–µ–µ —É—Ç—Ä–æ
        if (hour >= 5 && hour <= 8) {
            return 'senior';
        }
        return 'young-adult';
    }
    
    // –†–∞—Å—á–µ—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —É—è–∑–≤–∏–º–æ—Å—Ç–∏ (–∫–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ –±–æ–ª–µ–µ –æ—Ç–∫—Ä—ã—Ç)
    calculateVulnerability(hour, day) {
        let score = 0;
        
        // –ü–æ–∑–¥–Ω–∏–π –≤–µ—á–µ—Ä / –Ω–æ—á—å - –ª—é–¥–∏ –±–æ–ª–µ–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã
        if (hour >= 22 || hour <= 3) score += 3;
        
        // –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤–µ—á–µ—Ä–æ–º - "–∑–∞–≤—Ç—Ä–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É/—É—á–µ–±—É" —Å—Ç—Ä–µ—Å—Å
        if (day === 0 && hour >= 18) score += 2;
        
        // –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - —Ç—è–∂–µ–ª—ã–π –¥–µ–Ω—å
        if (day === 1) score += 1;
        
        // –ü—è—Ç–Ω–∏—Ü–∞ –≤–µ—á–µ—Ä - —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ, –±–æ–ª—å—à–µ –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏
        if (day === 5 && hour >= 18) score += 1;
        
        return score; // 0-7
    }
    
    // –û—Ü–µ–Ω–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
    assessSharingReadiness() {
        const hasProblemKeywords = this.detectProblemMentions();
        const scrollDepth = 0; // –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è
        const timeOnSite = 0; // –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è
        
        return {
            hasProblemKeywords,
            engagementLevel: 0,
            ready: false
        };
    }
    
    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã-–∏—Å—Ç–æ—á–Ω–∏–∫–∞
    detectSourcePlatform(referrer) {
        if (referrer.includes('instagram')) return 'instagram';
        if (referrer.includes('tiktok')) return 'tiktok';
        if (referrer.includes('vk.com')) return 'vk';
        if (referrer.includes('telegram')) return 'telegram';
        if (referrer.includes('whatsapp')) return 'whatsapp';
        if (referrer.includes('facebook')) return 'facebook';
        if (referrer.includes('twitter') || referrer.includes('x.com')) return 'twitter';
        if (referrer.includes('youtube')) return 'youtube';
        if (referrer.includes('google')) return 'google';
        if (referrer.includes('yandex')) return 'yandex';
        return 'direct';
    }
    
    // –ü–æ–∏—Å–∫ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —É–ø–æ–º–∏–Ω–∞–Ω–∏–π
    detectProblemMentions() {
        const problemWords = ['–ø—Ä–æ–±–ª–µ–º', '–∫–æ—Å—è–∫', '—Ç—Ä–∞–±–ª', '–ø–æ–º–æ–≥–∏—Ç–µ', '—á—Ç–æ –¥–µ–ª–∞—Ç—å'];
        const pageText = document.body.innerText.toLowerCase();
        return problemWords.some(word => pageText.includes(word));
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º
    init() {
        this.setupEmotionalTriggers();
        this.setupAgeAdaptiveContent();
        this.setupPerfectMomentCapture();
        this.setupPsychologicalHooks();
        this.setupViralSharing();
        this.setupRetentionMechanics();
    }
    
    // –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
    setupEmotionalTriggers() {
        // –¢—Ä–∏–≥–≥–µ—Ä –Ω–∞ negative keywords –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        let typingTimer;
        const messageInput = document.getElementById('messageInput');
        
        if (messageInput) {
            messageInput.addEventListener('input', (e) => {
                clearTimeout(typingTimer);
                typingTimer = setTimeout(() => {
                    const text = e.target.value.toLowerCase();
                    
                    // –î–µ—Ç–µ–∫—Ç–∏—Ä—É–µ–º —Ç—è–∂–µ–ª—ã–µ —ç–º–æ—Ü–∏–∏
                    const heavyEmotions = ['—Ö–æ—á—É —É–º–µ—Ä–µ—Ç—å', '—É–±–∏—Ç—å —Å–µ–±—è', '—Å—É–∏—Ü–∏–¥', '–ø–æ–∫–æ–Ω—á–∏—Ç—å', '–Ω–µ—Ç —Å–º—ã—Å–ª–∞ –∂–∏—Ç—å'];
                    const isEmergency = heavyEmotions.some(emotion => text.includes(emotion));
                    
                    if (isEmergency) {
                        this.showEmergencySupport();
                    }
                    
                    // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ typing
                    if (text.length > 50 && !this.hasShownEncouragement) {
                        this.showTypingEncouragement();
                        this.hasShownEncouragement = true;
                    }
                }, 1000);
            });
        }
    }
    
    // –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
    showEmergencySupport() {
        const emergency = document.createElement('div');
        emergency.className = 'emergency-overlay';
        emergency.innerHTML = `
            <div class="emergency-content">
                <h2>üÜò –≠—Ç–æ –∑–≤—É—á–∏—Ç –æ—á–µ–Ω—å —Å–µ—Ä—å–µ–∑–Ω–æ</h2>
                <p>–ï—Å–ª–∏ —Ç—ã –¥—É–º–∞–µ—à—å –æ —Å—É–∏—Ü–∏–¥–µ - –ü–û–ñ–ê–õ–£–ô–°–¢–ê –ø–æ–∑–≤–æ–Ω–∏:</p>
                <a href="tel:88002000122" class="emergency-call">üìû 8-800-2000-122</a>
                <p>–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–≤–µ—Ä–∏—è - –±–µ—Å–ø–ª–∞—Ç–Ω–æ, 24/7, –∞–Ω–æ–Ω–∏–º–Ω–æ</p>
                <p>–ü–æ—Å–ª–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å –Ω–∏–º–∏ - –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –Ω–∞ –ú–∏–∫–æ—Å–∏–∫ —á—Ç–æ–±—ã –ø—Ä–æ—Å—Ç–æ –≤—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è</p>
                <button class="emergency-continue">–Ø –ø—Ä–æ—Å—Ç–æ —Ö–æ—á—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –Ω–∞ –ú–∏–∫–æ—Å–∏–∫</button>
            </div>
        `;
        document.body.appendChild(emergency);
        
        emergency.querySelector('.emergency-continue').onclick = () => emergency.remove();
    }
    
    // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–∏ –Ω–∞–±–æ—Ä–µ
    showTypingEncouragement() {
        const encouragement = document.createElement('div');
        encouragement.className = 'typing-encouragement';
        encouragement.innerHTML = `
            <div class="encouragement-bubble">
                üí≠ –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–π –∫–∞–∫ –µ—Å—Ç—å... –ú–∏–∫–æ—Å–∏–∫ –Ω–µ –æ—Å—É–∂–¥–∞–µ—Ç
            </div>
        `;
        document.body.appendChild(encouragement);
        
        setTimeout(() => {
            if (encouragement.parentNode) encouragement.remove();
        }, 3000);
    }
    
    // –í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    setupAgeAdaptiveContent() {
        const age = this.userProfile.likelyAge;
        
        const ageMessages = {
            'teen': {
                welcome: "–°–µ—Ä—å–µ–∑–Ω–æ, —Ç—É—Ç –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è –±–µ–∑ –ø–∞–ª–µ–≤–∞! –ê–Ω–æ–Ω–∏–º–Ω–æ —Ä–∞—Å—Å–∫–∞–∂–∏ –æ –ª—é–±–æ–º –∫–æ—Å—è–∫–µ üíØ",
                prompt: "–ß–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ? –†–∞—Å—Å–∫–∞–∂–∏...",
                submit: "–ó–∞–ª–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é üî•",
                footer: "–ú–∏–∫–æ—Å–∏–∫ - –±–µ–∑ –±—É–ª–ª—à–∏—Ç–∞, –ø—Ä–æ—Å—Ç–æ —Ä–∞—Å—Å–∫–∞–∂–∏"
            },
            'young-adult': {
                welcome: "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ã—Å–∫–∞–∑–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω–æ. –ë–µ–∑ —Å–æ–≤–µ—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø—Ä–æ—Å–∏–ª - –ø—Ä–æ—Å—Ç–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å.",
                prompt: "–ß—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å? –ü–æ–¥–µ–ª–∏—Å—å...",
                submit: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ ‚úàÔ∏è",
                footer: "–ú–∏–∫–æ—Å–∏–∫ - –ø—Ä–æ—Å—Ç–æ –º–µ—Å—Ç–æ –≤—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è"
            },
            'adult': {
                welcome: "–ú–µ—Å—Ç–æ –≥–¥–µ –º–æ–∂–Ω–æ –∞–Ω–æ–Ω–∏–º–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–æ–±–ª–µ–º–æ–π. –ò–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –∫–æ–º—É-—Ç–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å.",
                prompt: "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–∏—Ç—É–∞—Ü–∏–∏...",
                submit: "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω–æ ‚Üí",
                footer: "–ú–∏–∫–æ—Å–∏–∫ - –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è"
            },
            'senior': {
                welcome: "–ó–¥–µ—Å—å –≤–∞—Å –≤—ã—Å–ª—É—à–∞—é—Ç –±–µ–∑ –æ—Å—É–∂–¥–µ–Ω–∏—è. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ —á—Ç–æ –Ω–∞ –¥—É—à–µ - —Å—Ç–∞–Ω–µ—Ç –ª–µ–≥—á–µ.",
                prompt: "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è–º–∏...",
                submit: "–†–∞—Å—Å–∫–∞–∑–∞—Ç—å ‚Üí",
                footer: "–ú–∏–∫–æ—Å–∏–∫ - –ø–æ–Ω–∏–º–∞–µ–º –∏ –Ω–µ –æ—Å—É–∂–¥–∞–µ–º"
            }
        };
        
        const content = ageMessages[age] || ageMessages['young-adult'];
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        const welcomeP = document.querySelector('.welcome-message p');
        if (welcomeP) welcomeP.textContent = content.welcome;
        
        const footerP = document.querySelector('.footer p');
        if (footerP && footerP.textContent.includes('¬©')) {
            footerP.textContent = `¬© 2025 ${content.footer}`;
        }
    }
    
    // –ü–æ–∏–º–∫–∞ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    setupPerfectMomentCapture() {
        let perfectMoments = {
            longRead: false,      // –î–æ–ª–≥–æ–µ —á—Ç–µ–Ω–∏–µ
            backAndForth: false,  // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è
            hesitation: false,    // –ö–æ–ª–µ–±–ª–µ—Ç—Å—è
            almostLeft: false     // –ü–æ—á—Ç–∏ —É—à–µ–ª
        };
        
        // –î–æ–ª–≥–æ–µ —á—Ç–µ–Ω–∏–µ (—Å–∏–ª—å–Ω–∞—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å)
        setTimeout(() => {
            if (this.userProfile.timeOnSite > 45) {
                perfectMoments.longRead = true;
                this.showPerfectMomentTrigger('engaged');
            }
        }, 45000);
        
        // –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∫–æ–ª–µ–±–∞–Ω–∏–π (–º–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏–π –º—ã—à—å—é)
        let mouseMovements = 0;
        document.addEventListener('mousemove', () => {
            mouseMovements++;
            if (mouseMovements > 500 && !perfectMoments.hesitation) {
                perfectMoments.hesitation = true;
                this.showPerfectMomentTrigger('hesitating');
            }
        });
        
        // –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤–∏–∑–∏—Ç
        const lastVisit = localStorage.getItem('mikosik_last_visit');
        if (lastVisit && Date.now() - parseInt(lastVisit) < 24 * 60 * 60 * 1000) {
            perfectMoments.backAndForth = true;
            setTimeout(() => {
                this.showPerfectMomentTrigger('returning');
            }, 5000);
        }
        localStorage.setItem('mikosik_last_visit', Date.now().toString());
    }
    
    // –ü–æ–∫–∞–∑ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –≤ –∏–¥–µ–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç
    showPerfectMomentTrigger(momentType) {
        const messages = {
            'engaged': {
                text: "–í–∏–∂—É —á—Ç–æ —Ç–µ–±—è —á—Ç–æ-—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–æ–ª–Ω—É–µ—Ç... –•–æ—á–µ—à—å –ø—Ä–æ—Å—Ç–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ?",
                urgency: 'high',
                emoji: 'üí≠'
            },
            'hesitating': {
                text: "–ö–æ–ª–µ–±–ª–µ—à—å—Å—è? –¢—É—Ç –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è - –Ω–∏–∫—Ç–æ –Ω–µ —É–∑–Ω–∞–µ—Ç –∫—Ç–æ —Ç—ã",
                urgency: 'medium',
                emoji: 'ü§î'
            },
            'returning': {
                text: "–í–µ—Ä–Ω—É–ª—Å—è... –ó–Ω–∞—á–∏—Ç —á—Ç–æ-—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç. –ú–∏–∫–æ—Å–∏–∫ —Ç—É—Ç —á—Ç–æ–±—ã –≤—ã—Å–ª—É—à–∞—Ç—å",
                urgency: 'high',
                emoji: 'üëã'
            }
        };
        
        const moment = messages[momentType];
        
        const trigger = document.createElement('div');
        trigger.className = 'perfect-moment-trigger';
        trigger.innerHTML = `
            <div class="moment-bubble">
                <span class="moment-emoji">${moment.emoji}</span>
                <span class="moment-text">${moment.text}</span>
                <button class="moment-action">–û–∫–µ–π, —Ä–∞—Å—Å–∫–∞–∂—É</button>
                <button class="moment-dismiss">√ó</button>
            </div>
        `;
        
        document.body.appendChild(trigger);
        
        trigger.querySelector('.moment-action').onclick = () => {
            document.getElementById('messageInput').focus();
            trigger.remove();
            console.log('PERFECT_MOMENT_CONVERTED:', momentType);
        };
        
        trigger.querySelector('.moment-dismiss').onclick = () => trigger.remove();
        
        setTimeout(() => {
            if (trigger.parentNode) trigger.remove();
        }, 8000);
    }
    
    // –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫—Ä—é—á–∫–∏ (6 –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –ß–∞–ª–¥–∏–Ω–∏)
    setupPsychologicalHooks() {
        // 1. SOCIAL PROOF - —Å–æ—Ü–∏–∞–ª—å–Ω–æ–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ
        this.addSocialProof();
        
        // 2. SCARCITY - –¥–µ—Ñ–∏—Ü–∏—Ç
        this.addScarcity();
        
        // 3. AUTHORITY - –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç  
        this.addAuthority();
        
        // 4. RECIPROCITY - –≤–∑–∞–∏–º–Ω–æ—Å—Ç—å
        this.addReciprocity();
        
        // 5. CONSISTENCY - –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        this.addConsistency();
        
        // 6. LIKING - —Å–∏–º–ø–∞—Ç–∏—è
        this.addLiking();
    }
    
    // Social Proof
    addSocialProof() {
        // –ñ–∏–≤–æ–π —Å—á–µ—Ç—á–∏–∫ "—Å–µ–π—á–∞—Å —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é—Ç"
        setInterval(() => {
            const liveCounter = document.createElement('div');
            liveCounter.className = 'live-activity';
            liveCounter.innerHTML = `
                <div class="live-indicator">
                    <span class="live-dot"></span>
                    <span class="live-text">–ö—Ç–æ-—Ç–æ —Å–µ–π—á–∞—Å —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é...</span>
                </div>
            `;
            
            const container = document.querySelector('.container');
            if (container && !document.querySelector('.live-activity')) {
                container.insertBefore(liveCounter, container.firstChild);
                
                setTimeout(() => {
                    if (liveCounter.parentNode) liveCounter.remove();
                }, 5000);
            }
        }, 30000);
    }
    
    // Scarcity
    addScarcity() {
        // –ß—É–≤—Å—Ç–≤–æ —á—Ç–æ "—Å–µ–π—á–∞—Å –∏–ª–∏ –Ω–∏–∫–æ–≥–¥–∞"
        setTimeout(() => {
            if (!this.userHasShared) {
                this.showScarcityMessage();
            }
        }, 90000); // 1.5 –º–∏–Ω—É—Ç—ã
    }
    
    showScarcityMessage() {
        const scarcity = document.createElement('div');
        scarcity.className = 'scarcity-trigger';
        scarcity.innerHTML = `
            <div class="scarcity-content">
                <h4>‚è∞ –ú–æ–º–µ–Ω—Ç —É—Ö–æ–¥–∏—Ç...</h4>
                <p>–°–µ–π—á–∞—Å —Ç—ã –∑–¥–µ—Å—å, —Å–µ–π—á–∞—Å –º–æ–∂–µ—à—å –∞–Ω–æ–Ω–∏–º–Ω–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å. –ó–∞–≤—Ç—Ä–∞ –≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –Ω–µ —Ä–µ—à–∏—à—å—Å—è. –í—ã–≥–æ–≤–æ—Ä–∏—Å—å –ø–æ–∫–∞ –µ—Å—Ç—å –ø–æ—Ä—ã–≤!</p>
                <button class="scarcity-action">–†–∞—Å—Å–∫–∞–∑–∞—Ç—å —Å–µ–π—á–∞—Å</button>
            </div>
        `;
        
        document.body.appendChild(scarcity);
        
        scarcity.querySelector('.scarcity-action').onclick = () => {
            document.getElementById('messageInput').focus();
            scarcity.remove();
        };
        
        setTimeout(() => {
            if (scarcity.parentNode) scarcity.remove();
        }, 10000);
    }
    
    // Authority
    addAuthority() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ "–º–Ω–æ–≥–∏–µ —É–∂–µ —ç—Ç–æ —Å–¥–µ–ª–∞–ª–∏"
        const stats = document.querySelector('.welcome-stats');
        if (stats) {
            const authorityBadge = document.createElement('div');
            authorityBadge.innerHTML = '<small style="color: var(--text-muted);">–£–∂–µ –≤—ã–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å —Ç—ã—Å—è—á–∏ –ª—é–¥–µ–π - —Ç—ã –Ω–µ –æ–¥–∏–Ω</small>';
            stats.appendChild(authorityBadge);
        }
    }
    
    // Reciprocity
    addReciprocity() {
        // "–°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏ - –ø–æ—Ç–æ–º –¥–∞—à—å"
        setTimeout(() => {
            const reciprocity = document.createElement('div');
            reciprocity.className = 'reciprocity-note';
            reciprocity.innerHTML = `
                <div class="reciprocity-content">
                    üí° –ö—Å—Ç–∞—Ç–∏: –ö–æ–≥–¥–∞ –≤—ã—Å–∫–∞–∑–∞–ª—Å—è - —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ª–µ–≥—á–µ. –ê –ø–æ—Ç–æ–º —Å–º–æ–∂–µ—à—å –ø–æ–º–æ—á—å –∫–æ–º—É-—Ç–æ –µ—â–µ
                </div>
            `;
            
            const formFooter = document.querySelector('.form-footer');
            if (formFooter && !document.querySelector('.reciprocity-note')) {
                formFooter.appendChild(reciprocity);
            }
        }, 20000);
    }
    
    // Consistency  
    addConsistency() {
        // –ú–∏–∫—Ä–æ-–∫–æ–º–º–∏—Ç–º–µ–Ω—Ç—ã
        const nicknameInput = document.getElementById('nicknameInput');
        if (nicknameInput) {
            nicknameInput.addEventListener('input', (e) => {
                if (e.target.value.length > 2 && !this.hasShownConsistency) {
                    this.hasShownConsistency = true;
                    this.showConsistencyTrigger();
                }
            });
        }
    }
    
    showConsistencyTrigger() {
        const consistency = document.createElement('div');
        consistency.className = 'consistency-hint';
        consistency.innerHTML = `
            <div class="consistency-text">
                ‚úÖ –ù–∏–∫ –≤–≤–µ–¥–µ–Ω. –û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç...
            </div>
        `;
        
        const form = document.querySelector('.message-form');
        if (form) {
            form.insertBefore(consistency, form.firstChild);
            
            setTimeout(() => {
                if (consistency.parentNode) consistency.remove();
            }, 4000);
        }
    }
    
    // Liking
    addLiking() {
        // –¢–µ–ø–ª—ã–µ, –ø–æ–Ω–∏–º–∞—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        const age = this.userProfile.likelyAge;
        const warmMessages = {
            'teen': ["–ú—ã —Ç–µ–±—è –ø–æ–Ω–∏–º–∞–µ–º ü§ó", "–¢—É—Ç —Å–≤–æ–∏, –±–µ–∑ –ø–∞–ª–µ–≤–∞", "–†–∞—Å—Å–ª–∞–±—å—Å—è, —Ç—É—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ"],
            'young-adult': ["–ú—ã –≤—Å–µ —á–µ—Ä–µ–∑ —ç—Ç–æ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏", "–ó–¥–µ—Å—å –ø–æ–Ω–∏–º–∞—é—Ç", "–ë–µ–∑ –æ—Å—É–∂–¥–µ–Ω–∏—è"],
            'adult': ["–í–∞—Å –ø–æ–π–º—É—Ç", "–ú—ã –∑–Ω–∞–µ–º –∫–∞–∫ —ç—Ç–æ —Ç—è–∂–µ–ª–æ", "–ó–¥–µ—Å—å –±–µ–∑–æ–ø–∞—Å–Ω–æ"],
            'senior': ["–ú—ã –≤–∞—Å –ø–æ–Ω–∏–º–∞–µ–º", "–ó–¥–µ—Å—å –≤–∞—Å –≤—ã—Å–ª—É—à–∞—é—Ç", "–í—ã –Ω–µ –æ–¥–∏–Ω–æ–∫–∏"]
        };
        
        const messages = warmMessages[age] || warmMessages['young-adult'];
        const randomMessage = messages[Math.floor(Math.random() * messages.length)];
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            const liking = document.createElement('div');
            liking.className = 'liking-message';
            liking.textContent = randomMessage;
            
            document.body.appendChild(liking);
            
            setTimeout(() => {
                if (liking.parentNode) liking.remove();
            }, 3000);
        }, 15000);
    }
    
    // –í–∏—Ä—É—Å–Ω—ã–π —à–µ—Ä–∏–Ω–≥
    setupViralSharing() {
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ share —Ç—Ä–∏–≥–≥–µ—Ä—ã –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        const form = document.getElementById('messageForm');
        if (form) {
            form.addEventListener('submit', () => {
                setTimeout(() => {
                    this.showShareIncentive();
                }, 2000);
            });
        }
    }
    
    showShareIncentive() {
        const share = document.createElement('div');
        share.className = 'share-incentive-modal';
        share.innerHTML = `
            <div class="share-modal-content">
                <h3>üôè –°–ø–∞—Å–∏–±–æ —á—Ç–æ —Ä–∞—Å—Å–∫–∞–∑–∞–ª!</h3>
                <p>–ï—Å–ª–∏ –ú–∏–∫–æ—Å–∏–∫ –ø–æ–º–æ–≥ –≤—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è - –ø–æ–¥–µ–ª–∏—Å—å —Å –¥—Ä—É–∑—å—è–º–∏. –í–æ–∑–º–æ–∂–Ω–æ –∫–æ–º—É-—Ç–æ —Ç–æ–∂–µ –Ω—É–∂–Ω–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –∫–æ—Å—è–∫–µ:</p>
                <div class="share-buttons-grid">
                    <button class="share-tg" onclick="shareToTelegram()">Telegram</button>
                    <button class="share-wa" onclick="shareToWhatsApp()">WhatsApp</button>
                    <button class="share-vk" onclick="shareToVK()">VK</button>
                </div>
                <button class="share-skip">–ù–µ, —Å–ø–∞—Å–∏–±–æ</button>
            </div>
        `;
        
        document.body.appendChild(share);
        
        share.querySelector('.share-skip').onclick = () => share.remove();
        
        // Auto-dismiss —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (share.parentNode) share.remove();
        }, 15000);
    }
    
    // Retention –º–µ—Ö–∞–Ω–∏–∫–∏
    setupRetentionMechanics() {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–ª
        const hasShared = localStorage.getItem('mikosik_has_shared');
        
        if (hasShared) {
            // –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤–∏–∑–∏—Ç–æ–≤ - –¥—Ä—É–≥–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
            setTimeout(() => {
                this.showReturnUserWelcome();
            }, 2000);
        }
        
        // –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        const form = document.getElementById('messageForm');
        if (form) {
            form.addEventListener('submit', () => {
                localStorage.setItem('mikosik_has_shared', 'true');
                localStorage.setItem('mikosik_last_share', Date.now());
            });
        }
    }
    
    showReturnUserWelcome() {
        const welcome = document.createElement('div');
        welcome.className = 'return-user-welcome';
        welcome.innerHTML = `
            <div class="return-welcome-content">
                <span class="return-emoji">üíú</span>
                <span class="return-text">–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –ß—Ç–æ-—Ç–æ –µ—â–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç? –ú–∏–∫–æ—Å–∏–∫ –≤—Å–µ–≥–¥–∞ —Ç—É—Ç</span>
            </div>
        `;
        
        document.body.appendChild(welcome);
        
        setTimeout(() => {
            if (welcome.parentNode) welcome.remove();
        }, 5000);
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –∏–¥–µ–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç
    findPerfectMoment() {
        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è
        return {
            timeOfDay: new Date().getHours(),
            dayOfWeek: new Date().getDay(),
            emotionalPeak: this.userProfile.emotionalVulnerability >= 3
        };
    }
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∏—Ä—É—Å–Ω—ã–µ —Å—Ç–∏–ª–∏
const megaViralCSS = `
    .perfect-moment-trigger {
        position: fixed;
        bottom: 100px;
        right: 20px;
        z-index: 999999;
        animation: gentleBounce 2s ease-in-out infinite;
    }
    
    .moment-bubble {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 20px;
        border-radius: 20px;
        box-shadow: 0 10px 40px rgba(102, 126, 234, 0.4);
        max-width: 300px;
        display: flex;
        flex-direction: column;
        gap: 12px;
    }
    
    .moment-emoji {
        font-size: 24px;
    }
    
    .moment-action {
        background: white;
        color: #667eea;
        border: none;
        border-radius: 10px;
        padding: 10px 20px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .moment-action:hover {
        transform: scale(1.05);
        box-shadow: 0 5px 15px rgba(255,255,255,0.3);
    }
    
    .moment-dismiss {
        position: absolute;
        top: 5px;
        right: 10px;
        background: none;
        border: none;
        color: rgba(255,255,255,0.7);
        font-size: 20px;
        cursor: pointer;
    }
    
    .emergency-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.95);
        z-index: 9999999;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .emergency-content {
        background: linear-gradient(135deg, #ff4444, #cc0000);
        color: white;
        padding: 40px;
        border-radius: 20px;
        text-align: center;
        max-width: 500px;
        box-shadow: 0 20px 60px rgba(255, 68, 68, 0.5);
    }
    
    .emergency-call {
        display: inline-block;
        background: white;
        color: #ff4444;
        padding: 20px 40px;
        border-radius: 50px;
        text-decoration: none;
        font-size: 24px;
        font-weight: bold;
        margin: 20px 0;
        box-shadow: 0 5px 20px rgba(255,255,255,0.3);
    }
    
    .emergency-continue {
        background: transparent;
        color: white;
        border: 2px solid white;
        border-radius: 10px;
        padding: 10px 20px;
        cursor: pointer;
        margin-top: 20px;
    }
    
    .typing-encouragement {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 99999;
        pointer-events: none;
    }
    
    .encouragement-bubble {
        background: rgba(99, 102, 241, 0.95);
        color: white;
        padding: 15px 25px;
        border-radius: 25px;
        font-size: 16px;
        box-shadow: 0 10px 30px rgba(99, 102, 241, 0.4);
        animation: fadeInOut 3s ease-in-out;
    }
    
    .liking-message {
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        color: white;
        padding: 12px 24px;
        border-radius: 20px;
        z-index: 99999;
        animation: gentleSlide 0.5s ease-out;
        box-shadow: 0 5px 20px rgba(240, 147, 251, 0.4);
    }
    
    .consistency-hint {
        background: rgba(34, 197, 94, 0.1);
        border-left: 3px solid #22c55e;
        padding: 10px 15px;
        border-radius: 5px;
        margin-bottom: 15px;
        animation: slideDown 0.5s ease-out;
    }
    
    .live-activity {
        background: rgba(99, 102, 241, 0.1);
        border: 1px solid rgba(99, 102, 241, 0.3);
        border-radius: 10px;
        padding: 10px 15px;
        margin-bottom: 15px;
        animation: pulseGlow 2s ease-in-out infinite;
    }
    
    .live-indicator {
        display: flex;
        align-items: center;
        gap: 10px;
        font-size: 14px;
        color: var(--text-secondary);
    }
    
    .live-dot {
        width: 8px;
        height: 8px;
        background: #22c55e;
        border-radius: 50%;
        animation: pulse 1.5s ease-in-out infinite;
    }
    
    .scarcity-trigger {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 999999;
    }
    
    .scarcity-content {
        background: linear-gradient(135deg, #f5af19 0%, #f12711 100%);
        color: white;
        padding: 30px;
        border-radius: 20px;
        text-align: center;
        max-width: 400px;
        box-shadow: 0 20px 60px rgba(245, 175, 25, 0.4);
    }
    
    .scarcity-action {
        background: white;
        color: #f12711;
        border: none;
        border-radius: 10px;
        padding: 12px 30px;
        font-weight: 600;
        cursor: pointer;
        font-size: 16px;
        margin-top: 15px;
    }
    
    .share-incentive-modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        z-index: 999999;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .share-modal-content {
        background: var(--bg-secondary);
        border: 1px solid var(--border-color);
        border-radius: 20px;
        padding: 30px;
        max-width: 500px;
        text-align: center;
        color: var(--text-primary);
    }
    
    .share-buttons-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 10px;
        margin: 20px 0;
    }
    
    .share-buttons-grid button {
        padding: 12px;
        border: none;
        border-radius: 10px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .share-tg { background: #0088cc; color: white; }
    .share-wa { background: #25d366; color: white; }
    .share-vk { background: #4680c2; color: white; }
    
    .share-buttons-grid button:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    }
    
    .share-skip {
        background: transparent;
        color: var(--text-muted);
        border: 1px solid var(--border-color);
        border-radius: 10px;
        padding: 8px 20px;
        cursor: pointer;
        margin-top: 10px;
    }
    
    .return-user-welcome {
        position: fixed;
        top: 80px;
        left: 50%;
        transform: translateX(-50%);
        background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
        color: #2b2f33;
        padding: 15px 25px;
        border-radius: 15px;
        z-index: 99999;
        animation: slideDown 0.5s ease-out;
        box-shadow: 0 5px 20px rgba(168, 237, 234, 0.4);
    }
    
    .return-welcome-content {
        display: flex;
        align-items: center;
        gap: 10px;
        font-weight: 500;
    }
    
    @keyframes gentleBounce {
        0%, 100% { transform: translateY(0); }
        50% { transform: translateY(-10px); }
    }
    
    @keyframes fadeInOut {
        0% { opacity: 0; }
        10% { opacity: 1; }
        90% { opacity: 1; }
        100% { opacity: 0; }
    }
    
    @keyframes gentleSlide {
        from { transform: translateX(-50%) translateY(-100%); opacity: 0; }
        to { transform: translateX(-50%) translateY(0); opacity: 1; }
    }
    
    @keyframes slideDown {
        from { transform: translateY(-20px); opacity: 0; }
        to { transform: translateY(0); opacity: 1; }
    }
    
    @keyframes pulseGlow {
        0%, 100% { box-shadow: 0 0 0 0 rgba(99, 102, 241, 0.3); }
        50% { box-shadow: 0 0 0 10px rgba(99, 102, 241, 0); }
    }
    
    @media (max-width: 768px) {
        .perfect-moment-trigger {
            bottom: 80px;
            left: 10px;
            right: 10px;
        }
        
        .moment-bubble {
            max-width: none;
        }
        
        .share-modal-content {
            margin: 20px;
            padding: 20px;
        }
    }
`;

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
const styleSheet = document.createElement('style');
styleSheet.textContent = megaViralCSS;
document.head.appendChild(styleSheet);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
window.addEventListener('DOMContentLoaded', () => {
    window.megaViralPsychology = new MegaViralPsychology();
    console.log('üî• –ú–ï–ì–ê-–ü–°–ò–•–û–õ–û–ì–ò–Ø –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê');
});

